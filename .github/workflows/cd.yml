name: Deploy to AWS EC2

on:
  workflow_run:
    workflows: ["MERN APP CI"]  # CIワークフローの名前を指定
    branches: [main]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Download Server Artifacts
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: server-artifact

      # - name: Download Client Artifacts
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: client-artifact

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.EC2_ROLE_ARN }}
          role-session-name: github-actions-deploy-${{ github.event.repository.name }}-${{ github.run_number }}

      - name: Deploy Artifacts to EC2
        env:
          PRIVATE_KEY: ${{ secrets.GIT_PRIVATE_KEY }}
        run: |
          echo "${{ secrets.GIT_PRIVATE_KEY }}" > private_key
          chmod 600 private_key
          # serverアーティファクトの転送
          scp -o StrictHostKeyChecking=no -i private_key -r ./server-artifact/* ${{ secrets.EC2_USER_NAME }}@${{ secrets.EC2_HOST_NAME }}:/home/ec2-user/var/www/canmeet-app/server
          # clientアーティファクトの転送
          scp -o StrictHostKeyChecking=no -i private_key -r ./client-artifact/* ${{ secrets.EC2_USER_NAME }}@${{ secrets.EC2_HOST_NAME }}:/home/ec2-user/var/www/canmeet-app/client
          # デプロイ後のコマンド実行（例: アプリケーションの再起動）
          ssh -o StrictHostKeyChecking=no -i private_key ${{ secrets.EC2_USER_NAME }}@${{ secrets.EC2_HOST_NAME }} "cd /home/ec2-user/var/www/canmeet-app/server && sudo systemctl restart canmeet-app"
          ssh -o StrictHostKeyChecking=no -i private_key ${{ secrets.EC2_USER_NAME }}@${{ secrets.EC2_HOST_NAME }} "cd /home/ec2-user/var/www/canmeet-app/client && sudo systemctl restart canmeet-app"
